C51 COMPILER V9.54   DS1302                                                                01/22/2021 20:13:34 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN ds1302.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\keil5\C51\BIN\C51.exe ds1302.c

line level    source

   1          #include "ds1302.h"
   2          
   3          #define Delay1us() _nop_()
   4          
   5          //---DS1302写入和读取时分秒的地址命令---//
   6          //---秒分时日月周年 最低位读写位;-------//
   7          uchar code READ_RTC_ADDR[7] = {0x81, 0x83, 0x85, 0x87, 0x89, 0x8b, 0x8d};
   8          uchar code WRITE_RTC_ADDR[7] = {0x80, 0x82, 0x84, 0x86, 0x88, 0x8a, 0x8c};
   9          //---存储顺序是秒分时日月周年,存储格式是用BCD码---//
  10          uchar TIME[7] = {0x00, 0x30, 0x12, 0x01, 0x01, 0x02, 0x13};
  11          
  12          void Ds1302Write(uchar addr, uchar dat);
  13          uchar Ds1302Read(uchar addr);
  14          
  15          void ds1302Init()
  16          {
  17   1              uchar n;
  18   1              Ds1302Write(0x8E, 0X00); //禁止写保护，就是关闭写保护功能
  19   1      
  20   1              for (n = 0; n < 7; n++) //写入7个字节的时钟信号：分秒时日月周年
  21   1              {
  22   2                      Ds1302Write(WRITE_RTC_ADDR[n], TIME[n]);
  23   2              }
  24   1      
  25   1              Ds1302Write(0x8E, 0x80); //打开写保护功能
  26   1      }
  27          
  28          #define _BCD2HEX(BCD) BCD & 0xf0 * 10 + BCD & 0x0f
  29          #define _HEX2BCD(HEX) HEX % 10 + (HEX / 10 % 10) << 4;
  30          
  31          void readTime(Ds1302_TypeDef *time)
  32          {
  33   1              uchar tmp;
  34   1              /*读取秒*/
  35   1              tmp = Ds1302Read(READ_RTC_ADDR[0]);
  36   1              time->sec = tmp;
  37   1              /*读取分*/
  38   1              tmp = Ds1302Read(READ_RTC_ADDR[1]);
  39   1              time->min = tmp;
  40   1              /*读取时*/
  41   1              tmp = Ds1302Read(READ_RTC_ADDR[2]);
  42   1      
  43   1              if (tmp & 0x80)
  44   1              {
  45   2                      time->mode = (tmp & 0x20) ? PM : AM;
  46   2                      time->hour = tmp & 0x10 * 10 + tmp & 0x0f;
  47   2              }
  48   1              else
  49   1              {
  50   2                      time->mode = H24;
  51   2                      time->hour = tmp;
  52   2              }
  53   1      
  54   1              time->hour = tmp;
  55   1              /*读取日*/
C51 COMPILER V9.54   DS1302                                                                01/22/2021 20:13:34 PAGE 2   

  56   1              tmp = Ds1302Read(READ_RTC_ADDR[3]);
  57   1              time->date = tmp;
  58   1              /*读取月*/
  59   1              tmp = Ds1302Read(READ_RTC_ADDR[4]);
  60   1              time->mon = tmp;
  61   1              /*读取周*/
  62   1              tmp = Ds1302Read(READ_RTC_ADDR[5]);
  63   1              time->day = tmp;
  64   1              /*读取年*/
  65   1              tmp = Ds1302Read(READ_RTC_ADDR[6]);
  66   1              time->year = tmp;
  67   1      }
  68          void writeTime(Ds1302_TypeDef *time)
  69          {
  70   1              uchar tmp;
  71   1              /*写入秒*/
  72   1              tmp = time->sec;
  73   1              time->sec = tmp;
  74   1              Ds1302Write(WRITE_RTC_ADDR[0], tmp);
  75   1              /*写入分*/
  76   1              tmp = time->min;
  77   1              Ds1302Write(WRITE_RTC_ADDR[1], tmp);
  78   1              /*写入时*/
  79   1              tmp = time->hour;
  80   1              if (time->mode != H24)
  81   1                      tmp |= (time->mode = AM) ? 0 : 0x20;
  82   1              Ds1302Write(WRITE_RTC_ADDR[2], tmp);
  83   1              /*写入日*/
  84   1              tmp = time->date;
  85   1              Ds1302Write(WRITE_RTC_ADDR[3], tmp);
  86   1              /*写入月*/
  87   1              tmp = time->mon;
  88   1              Ds1302Write(WRITE_RTC_ADDR[4], tmp);
  89   1              /*写入周*/
  90   1              tmp = time->day;
  91   1              Ds1302Write(WRITE_RTC_ADDR[5], tmp);
  92   1              /*写入年*/
  93   1              tmp = time->year;
  94   1              tmp = _HEX2BCD(tmp);
  95   1              Ds1302Write(WRITE_RTC_ADDR[6], tmp);
  96   1      }
  97          void Ds1302Write(uchar addr, uchar dat)
  98          {
  99   1              uchar n;
 100   1              CE = 0;
 101   1              Delay1us();
 102   1      
 103   1              SCLK = 0; //先将SCLK置低电平。
 104   1              Delay1us();
 105   1              CE = 1; //然后将CE(CE)置高电平。
 106   1              Delay1us();
 107   1      
 108   1              for (n = 0; n < 8; n++) //开始传送八位地址命令
 109   1              {
 110   2                      DSIO = addr & 0x01; //数据从低位开始传送
 111   2                      addr >>= 1;
 112   2                      SCLK = 1; //数据在上升沿时，DS1302读取数据
 113   2                      Delay1us();
 114   2                      SCLK = 0;
 115   2                      Delay1us();
 116   2              }
 117   1      
C51 COMPILER V9.54   DS1302                                                                01/22/2021 20:13:34 PAGE 3   

 118   1              for (n = 0; n < 8; n++) //写入8位数据
 119   1              {
 120   2                      DSIO = dat & 0x01;
 121   2                      dat >>= 1;
 122   2                      SCLK = 1; //数据在上升沿时，DS1302读取数据
 123   2                      Delay1us();
 124   2                      SCLK = 0;
 125   2                      Delay1us();
 126   2              }
 127   1      
 128   1              CE = 0; //传送数据结束
 129   1              Delay1us();
 130   1      }
 131          
 132          uchar Ds1302Read(uchar addr)
 133          {
 134   1              uchar n, dat = 0, dat1;
 135   1              CE = 0;
 136   1              _nop_();
 137   1              SCLK = 0;
 138   1              _nop_();
 139   1              CE = 1;
 140   1              for (n = 0; n < 8; n++)
 141   1              {
 142   2                      DSIO = addr & 0x01;
 143   2                      addr >>= 1;
 144   2                      SCLK = 1;
 145   2                      _nop_();
 146   2                      SCLK = 0;
 147   2                      _nop_();
 148   2              }
 149   1              for (n = 0; n < 8; n++)
 150   1              {
 151   2                      dat1 = DSIO;
 152   2                      dat1 <<= n;
 153   2                      dat |= dat1;
 154   2      
 155   2                      SCLK = 1;
 156   2                      _nop_();
 157   2                      SCLK = 0;
 158   2                      _nop_();
 159   2              }
 160   1              CE = 0;
 161   1              _nop_(); //以下为DS1302复位的稳定时间,必须的。
 162   1              SCLK = 1;
 163   1              _nop_();
 164   1              DSIO = 0;
 165   1              _nop_();
 166   1              DSIO = 1;
 167   1              _nop_();
 168   1              return dat;
 169   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    573    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.54   DS1302                                                                01/22/2021 20:13:34 PAGE 4   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
